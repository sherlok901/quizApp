<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="system.serviceModel">
      <section name="domainServices" type="System.ServiceModel.DomainServices.Hosting.DomainServicesSection, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" allowDefinition="MachineToApplication" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="QuestionForStudent" value="15" />
  </appSettings>
  <connectionStrings>
    <add name="MRZSConnectionString" connectionString="Data Source=IGORPC\SQLEXPRESS;Initial Catalog=MRZS;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="MRZSEntities" connectionString="metadata=res://*/Models.MRZSModel.csdl|res://*/Models.MRZSModel.ssdl|res://*/Models.MRZSModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=IGORPC\SQLEXPRESS;Initial Catalog=MRZS;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />
    <add name="MRZSConnectionString1" connectionString="Data Source=IGORPC\SQLEXPRESS;Initial Catalog=MRZS;Integrated Security=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <httpModules>
      <add name="DomainServiceModule" type="System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpModules>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </assemblies>
    </compilation>
    <authentication mode="Forms">
      <forms name=".MRZSM_ASPXAUTH" />
    </authentication>
    <profile>
      <properties>
        <add name="FriendlyName" />
      </properties>
    </profile>
    <membership defaultProvider="AspNetSqlMembershipProvider" userIsOnlineTimeWindow="15">
      <providers>
        <!-- This sample shows how to override some ASP.NET settings yet still use the default
           SQL Express Server instance. The example below keeps the default settings but
           makes the use of a security question optional -->
        <remove name="AspNetSqlMembershipProvider" />
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="MRZSConnectionString" enablePasswordRetrieval="false" enablePasswordReset="true" applicationName="MRZS" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="1" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" requiresQuestionAndAnswer="false" />
      </providers>
    </membership>
    <roleManager enabled="true" cacheRolesInCookie="true" cookieName=".ASPROLES" cookieRequireSSL="true" defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <add connectionStringName="MRZSConnectionString" applicationName="MRZS" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlRoleProvider" />
      </providers>
    </roleManager>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="DomainServiceModule" preCondition="managedHandler" type="System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule, System.ServiceModel.DomainServices.Hosting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </modules>
  </system.webServer>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <customBinding>
        <binding name="MRZSM.Web.Services.CustomService.customBinding0">
          <binaryMessageEncoding />
          <httpTransport />
        </binding>
        <binding name="MRZS.Web.IgorLINQ.MenuWCF.customBinding0">
          <binaryMessageEncoding />
          <httpTransport />
        </binding>
        <binding name="MRZS.Web.IgorLINQ.MenuService.customBinding0">
          <binaryMessageEncoding />
          <httpTransport />
        </binding>
        <binding name="MRZS.Web.IgorS.customBinding0">
          <binaryMessageEncoding />
          <httpTransport />
        </binding>
      </customBinding>
    </bindings>
    <services>
      <service name="MRZSM.Web.Services.CustomService">
        <endpoint address="" binding="customBinding" bindingConfiguration="MRZSM.Web.Services.CustomService.customBinding0" contract="MRZSM.Web.Services.CustomService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="MRZS.Web.IgorLINQ.MenuWCF">
        <endpoint address="" binding="customBinding" bindingConfiguration="MRZS.Web.IgorLINQ.MenuWCF.customBinding0" contract="MRZS.Web.IgorLINQ.MenuWCF" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="MRZS.Web.IgorLINQ.MenuService">
        <endpoint address="" binding="customBinding" bindingConfiguration="MRZS.Web.IgorLINQ.MenuService.customBinding0" contract="MRZS.Web.IgorLINQ.MenuService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
      <service name="MRZS.Web.IgorS">
        <endpoint address="" binding="customBinding" bindingConfiguration="MRZS.Web.IgorS.customBinding0" contract="MRZS.Web.IgorS" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
</configuration>